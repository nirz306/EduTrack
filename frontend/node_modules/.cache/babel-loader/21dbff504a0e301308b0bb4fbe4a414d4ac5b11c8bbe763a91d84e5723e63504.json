{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var resolve = function resolve(value) {\n      resolvePromise(value);\n    };\n    var reject = function reject(value) {\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('User-Agent' in headers || 'user-agent' in headers) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers['User-Agent'] && !headers['user-agent']) {\n        delete headers['User-Agent'];\n        delete headers['user-agent'];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError('Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream', config));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n    if (auth) {\n      delete headers.Authorization;\n    }\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: {\n        http: config.httpAgent,\n        https: config.httpsAgent\n      },\n      auth: auth\n    };\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n            return parsed.hostname === proxyElement;\n          });\n        }\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n          /*eslint default-case:0*/\n          case 'gzip':\n          case 'compress':\n          case 'deflate':\n            // add the unzipper to the body stream processing pipeline\n            stream = stream.pipe(zlib.createUnzip());\n\n            // remove the content-encoding in order to not confuse downstream operations\n            delete res.headers['content-encoding'];\n            break;\n        }\n      }\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded', config, null, lastRequest));\n          }\n        });\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString(config.responseEncoding);\n            if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n              responseData = utils.stripBOM(responseData);\n            }\n          }\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n      if (isNaN(timeout)) {\n        reject(createError('error trying to parse `config.timeout` to int', config, 'ERR_PARSE_TIMEOUT', req));\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + timeout + 'ms exceeded', config, config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED', req));\n      });\n    }\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};","map":{"version":3,"names":["utils","require","settle","buildFullPath","buildURL","http","https","httpFollow","httpsFollow","url","zlib","pkg","createError","enhanceError","isHttps","setProxy","options","proxy","location","hostname","host","port","path","auth","base64","Buffer","from","username","password","toString","headers","beforeRedirect","redirection","href","module","exports","httpAdapter","config","Promise","dispatchHttpRequest","resolvePromise","rejectPromise","resolve","value","reject","data","version","isStream","isBuffer","isArrayBuffer","Uint8Array","isString","length","undefined","fullPath","baseURL","parsed","parse","protocol","urlAuth","split","urlUsername","urlPassword","Authorization","isHttpsRequest","test","agent","httpsAgent","httpAgent","params","paramsSerializer","replace","method","toUpperCase","agents","socketPath","proxyEnv","slice","proxyUrl","process","env","parsedProxyUrl","noProxyEnv","no_proxy","NO_PROXY","shouldProxy","noProxy","map","trim","s","some","proxyMatch","proxyElement","substr","proxyUrlAuth","transport","isHttpsProxy","maxRedirects","maxBodyLength","req","request","handleResponse","res","aborted","stream","lastRequest","statusCode","decompress","pipe","createUnzip","response","status","statusText","statusMessage","responseType","responseBuffer","totalResponseBytes","on","handleStreamData","chunk","push","maxContentLength","destroy","handleStreamError","err","handleStreamEnd","responseData","concat","responseEncoding","stripBOM","handleRequestError","code","timeout","parseInt","isNaN","setTimeout","handleRequestTimeout","abort","transitional","clarifyTimeoutError","cancelToken","promise","then","onCanceled","cancel","end"],"sources":["D:/Sanjana/EduTrack/frontend/node_modules/axios/lib/adapters/http.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var resolve = function resolve(value) {\n      resolvePromise(value);\n    };\n    var reject = function reject(value) {\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('User-Agent' in headers || 'user-agent' in headers) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers['User-Agent'] && !headers['user-agent']) {\n        delete headers['User-Agent'];\n        delete headers['user-agent'];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString(config.responseEncoding);\n            if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n              responseData = utils.stripBOM(responseData);\n            }\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(createError(\n          'error trying to parse `config.timeout` to int',\n          config,\n          'ERR_PARSE_TIMEOUT',\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        reject(createError(\n          'timeout of ' + timeout + 'ms exceeded',\n          config,\n          config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n          req\n        ));\n      });\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}